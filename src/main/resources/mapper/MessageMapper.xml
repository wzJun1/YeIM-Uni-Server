<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wzjun1.yeimServer.mapper.MessageMapper">

    <resultMap id="MessageMap" type="cn.wzjun1.yeimServer.domain.Message">
        <id property="sequence" column="sequence" jdbcType="BIGINT"/>
        <result property="messageId" column="message_id" jdbcType="VARCHAR"/>
        <result property="conversationId" column="message_conversation_id" jdbcType="VARCHAR"/>
        <result property="from" column="from" jdbcType="VARCHAR"/>
        <result property="to" column="to" jdbcType="VARCHAR"/>
        <result property="type" column="message_type" jdbcType="VARCHAR"/>
        <result property="body" column="body" jdbcType="OTHER" javaType="com.alibaba.fastjson.JSONObject"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.FastjsonTypeHandler"/>
        <result property="isRead" column="is_read" jdbcType="TINYINT"/>
        <result property="isRecall" column="is_recall" jdbcType="TINYINT"/>
        <result property="receive" column="receive" jdbcType="INTEGER"/>
        <result property="status" column="message_status" jdbcType="VARCHAR"/>
        <result property="time" column="time" jdbcType="BIGINT"/>
        <association property="fromUserInfo" javaType="cn.wzjun1.yeimServer.domain.User">
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="avatarUrl" column="avatar_url" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <select id="getMessageById" resultMap="MessageMap">
        SELECT u.nickname,
               u.avatar_url,
               m.`id`              as sequence,
               m.`message_id`,
               m.`conversation_id` as message_conversation_id,
               m.`from`,
               m.`to`,
               m.`type`            as message_type,
               m.`body`,
               m.`is_read`,
               m.`is_recall`,
               m.`status`          as message_status,
               m.`receive`,
               m.`time`
        FROM `message` as m
                 LEFT JOIN `user` as u ON u.`user_id` = m.`from`
        WHERE m.`message_id` = #{messageId}
        ORDER BY m.`id` desc
    </select>

    <select id="listMessage" resultMap="MessageMap">
        SELECT u.nickname,
               u.avatar_url,
               m.`id`              as sequence,
               m.`message_id`,
               m.`conversation_id` as message_conversation_id,
               m.`from`,
               m.`to`,
               m.`type`            as message_type,
               m.`body`,
               m.`is_read`,
               m.`is_recall`,
               m.`status`          as message_status,
               m.`receive`,
               m.`time`
        FROM `message` as m
                 LEFT JOIN `user` as u ON u.`user_id` = m.`from`
        WHERE (m.`conversation_id` = #{conversationId} and m.`from` = #{userId})
           or (m.`conversation_id` = #{userId} and m.`from` = #{conversationId})
        ORDER BY m.`id` desc
    </select>
</mapper>
